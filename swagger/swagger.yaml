swagger: "2.0"
info:
  description: "This is TimeCapture API Docs. almost API using JWT."
  version: "1.0.0"
  title: "Swagger TimeCapture"
host: "awsdomain"
basePath: "/"
tags:
- name: "Authentication"
  description: "Everything about Auth"
- name: "Token"
  description: "Everything about Token"
- name: "Config"
  description: "Everything about Config(but not a user info)"
- name: "Friend"
  description: "Everything about Friend"
- name: "TimeCapture"
  description: "Everything about TimeCapture"
- name: "History"
  description: "Everything about history"
schemes:
- "http"
# change -g 
# consumes:
# - "application/json"
# # The following media types may be passed as output in message bodies of the API.
# # The media type(s) consumable by the requester is specified in the Accept header field
# # of the corresponding request.
# # The actual media type returned will be specified in the Content-Type header field
# # of the of the response.
# # The default of the Accept header is json, i.e. there is not needed to
# # set the value, bust supporting it serves extensibility.
# produces:
# - "application/json"
# # securityDefinitions:
# #   Bearer:
# #     type: apiKey
# #     name: Authorization
# #     in: header
paths:
  /auth/login:
    post:
      summary: user login
      description: user login
      produces: 
      - application/json
      tags: 
      - Authentication
      parameters: 
      - in: query
        name: id
        description: user id
        type: string
        required: true
      - in: query
        name: password
        description: user password
        type: string
        required: true
      responses:
        201:
          description: success login and return token
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              token:
                type: string
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6IiIsInVzZXJuYW1lIjoiZm9vIiwiZXhwIjoxNTA3MTQ2MzAxfQ.2ey2CYUnW9iUyyQJIYu856q9SaUxZU0FCejlA3FObPE"
        400:
          description: fail login and return nothing
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /auth/register:
    post:
      summary: user register
      description: user register
      produces: 
      - application/json
      tags: 
      - Authentication
      parameters: 
      - in: query
        name: id
        description: user id
        type: string
        required: true
      - in: query
        name: password
        description: user password
        type: string
        required: true
      - in: query
        name: name
        description: user name
        type: string
        required: true
      - in: query
        name: eamil
        description: email
        type: string
        required: true
      responses:
        200:
          description: success register
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fail register
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /auth/update:
    put:
      summary: user info update
      description: user info update
      produces: 
      - applicateion/json
      tags: 
      - Authentication
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
        required: true
      - in: query
        name: id
        description: will update user id
        type: string
      - in: query
        name: password
        description: will update user password
        type: string
      - in: query
        name: email
        description: email
        type: string
      - in: query
        name: name
        description: name
        type: string
      responses:
        200:
          description: success update
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fail update
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /auth/logout:
    delete:
      summary: user logout
      description: user logout and delete token
      produces: 
      - application/json
      tags:
      - Authentication
      parameters: 
      - in: header
        name: token
        description: delete this token
        type: string
        required: true
      responses:
        200:
          description: success delete
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fali delete
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        
        
  /refreshToken:
    get:
      summary: token refresh
      description: token refresh
      produces: 
      - application/json
      tags: 
      - Token
      parameters: 
      - in: header
        name: token
        description: expire token
        type: string
        required: true
      responses:
        200:
          description: success refresh
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              token:
                type: string
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6IiIsInVzZXJuYW1lIjoiZm9vIiwiZXhwIjoxNTA3MTQ2MzAxfQ.2ey2CYUnW9iUyyQJIYu856q9SaUxZU0FCejlA3FObPE"
        400:
          description: fail refresh
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /verifyToken:
    get:
      summary: verify token
      description: check this token is verify
      produces: 
      - application/json
      tags: 
      - Token
      parameters: 
      - in: header
        name: token
        description: expire token
        type: string
        required: true
      responses:
        200:
          description: success check
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              token:
                type: string
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6IiIsInVzZXJuYW1lIjoiZm9vIiwiZXhwIjoxNTA3MTQ2MzAxfQ.2ey2CYUnW9iUyyQJIYu856q9SaUxZU0FCejlA3FObPE"
        400:
          description: fail check
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /config:
    put:
      summary: update config
      description: update config
      produces: 
      - Application/json
      consumes: 
      # - application/x-www-form-urlencoded
      - multipart/form-data
      tags:
      - Config
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
      - in: formData
        name: id
        description: user id
        type: string
      - in: formData
        name: password
        description: user password
        type: string
      - in: formData
        name: name
        description: user name
        type: string
      - in: formData
        name: email
        description: user email
        type: string
      - in: formData
        name: profile
        description: user profile
        type: file
      responses:
        200:
          description: success config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fali config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
                
  /friend/list:
    get:
      summary: get friend list
      description: get friend list
      tags: 
      - Friend
      produces: 
      - Application/json
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
      responses:
        200:
          description: success call friend list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: object
                properties:
                  name:
                    type: string
                  userCode:
                    type: string
                  profile:
                    type: string
        400:
          description: fali call friend list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /friend/add:
    post:
      summary: add new friend
      description: add new friend
      tags: 
      - Friend
      produces: 
      - Application/json
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
      - in: query
        name: usercode
        description: user code what you add
        type: string
      responses:
        200:
          description: success add
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fali add
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
                    
  /friend/{userCode}:
    get:
      summary: get friend info
      description: get friend info
      produces:
      - Application/json
      tags: 
      - Friend
      parameters: 
      - in: path
        name: userCode
        description: user Code
        type: string
        required: true
      - in: header
        name: token
        description: user token 
        type: string
        required: true
      responses:
        200:
          description: success config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: string
                    picture:
                      type: string
                    lockDay:
                      type: string
                    unLockDay:
                      type: string
                    location:
                      type: string
                    people:
                      type: array
                      items:
                        type: string
        400:
          description: fali config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /timeCapture:
    post:
      summary: create timeCapture
      description: create timeCapture
      produces:
      - Application/json
      consumes: 
      # - application/x-www-form-urlencoded
      - multipart/form-data
      tags: 
      - TimeCapture
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
        required: true
      - in: formData
        name: picture
        description: picture which you lock
        type: file
        required: true
      - in: formData
        name: title
        description: title
        type: string
      - in: formData
        name: lockDate
        description: lockDate
        type: string
      - in: formData
        name: unLockDate
        description: unLockDate
        type: string
      - in: formData
        name: location
        description: location
        type: string
      - in: formData
        name: friends
        description: friend array
        type: array
        items:
          type: string
      responses:
        200:
          description: success add
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
        400:
          description: fali add
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /timeCapture/{index}:
    get:
      summary: get timeCapture
      description: get timeCapture
      produces:
      - Application/json
      tags: 
      - TimeCapture
      parameters: 
      - in: path
        name: index
        description: user index
        type: string
        required: true
      - in: header
        name: token
        description: user token
        type: string
        required: true
      responses:
        200:
          description: success index
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: string
                    picture:
                      type: string
                    lockDay:
                      type: string
                    unLockDay:
                      type: string
                    location:
                      type: string
                    friends:
                      type: string
        400:
          description: fali config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /timeCapture/list:
    get:
      summary: get timeCapture list
      description: get timeCapture list
      tags: 
      - TimeCapture
      produces: 
      - Application/json
      parameters: 
      - in: query
        name: sort
        description: return using sort
        type: string
      - in: header
        name: token
        description: user token
        type: string
      
      responses:
        200:
          description: success call timeCapture list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: object
                properties:
                  index:
                    type: string
                  name:
                    type: string
                  userCode:
                    type: string
                  profile:
                    type: string
                  picture:
                    type: string
                  lockDay:
                    type: string
                  unLockDay:
                    type: string
                  location:
                    type: string
                  friends:
                    type: string
        400:
          description: fali call timeCapture list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /history/{index}:
    get:
      summary: get history
      description: get history
      produces:
      - Application/json
      tags: 
      - History
      parameters: 
      - in: path
        name: index
        description: user index
        type: string
        required: true
      - in: header
        name: token
        description: user token
        type: string
        required: true
      responses:
        200:
          description: success index
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: string
                    picture:
                      type: string
                    lockDay:
                      type: string
                    unLockDay:
                      type: string
                    location:
                      type: string
                    friends:
                      type: string
        400:
          description: fali config
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
  /history/list:
    get:
      summary: get history list
      description: get history list
      tags: 
      - History
      produces: 
      - Application/json
      parameters: 
      - in: header
        name: token
        description: user token
        type: string
      - in: query
        name: sort
        description: return using sort
        type: string
      responses:
        200:
          description: success call history list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "success"
              result:
                type: object
                properties:
                  index:
                    type: string
                  name:
                    type: string
                  userCode:
                    type: string
                  profile:
                    type: string
                  picture:
                    type: string
                  lockDay:
                    type: string
                  unLockDay:
                    type: string
                  location:
                    type: string
                  friends:
                    type: string
        400:
          description: fali call history list
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
        500:
          description: server error
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "error message"
    
    
    
    
    
    
    
    
    
 